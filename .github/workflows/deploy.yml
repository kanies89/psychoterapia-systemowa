name: Deploy to PythonAnywhere

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up SSH Key
      env:
        SSH_PRIVATE_KEY: ${{ secrets.PYTHONANYWHERE_KEY }}  # Use the GitHub secret containing the private key
      run: |
        echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa  # Ensure proper permissions for the private key
        # Start SSH agent
        eval $(ssh-agent -s)
        # Add the private key to the agent
        echo "${{ secrets.SSH_KEY_PASSWORD }}" | ssh-add ~/.ssh/id_rsa

    - name: Add PythonAnywhere to known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ssh.pythonanywhere.com >> ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts

    - name: Copy the Repository to PythonAnywhere
      run: |
        # Copy the repository to PythonAnywhere using SCP
        scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -r . ${{ secrets.PYTHONANYWHERE_USERNAME }}@ssh.pythonanywhere.com:/home/${{ secrets.PYTHONANYWHERE_USERNAME }}/your-directory

    - name: Connect to PythonAnywhere and stop
      run: |
        # Connect to PythonAnywhere but don't run anything further, just stop
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.PYTHONANYWHERE_USERNAME }}@ssh.pythonanywhere.com "echo 'Connected and repository copied to /home/${{ secrets.PYTHONANYWHERE_USERNAME }}/your-directory'"
