name: Deploy Multi-Container App to Heroku

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Check if commit message contains DEPLOY
      - name: Check Commit Message
        id: check_message
        run: |
          if [[ "${{ github.event.head_commit.message }}" != *"DEPLOY"* ]]; then
            echo "Commit message does not contain 'DEPLOY'. Exiting workflow."
            exit 0
          fi
        shell: bash

      # Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin


      # Log in to Heroku Container Registry
      - name: Log in to Heroku Container Registry
        run: |
          echo "${{ secrets.HEROKU_API_KEY }}" | docker login --username=_ --password-stdin registry.heroku.com

      # Build and tag Docker images using docker-compose
      - name: Build and Tag Docker Images
        run: |
          docker compose build
          docker tag django-app registry.heroku.com/${{ secrets.APP_NAME }}/web
          docker tag nextjs-app registry.heroku.com/${{ secrets.APP_NAME }}/nextjs

      # Push Django and Next.js images to Heroku Container Registry
      - name: Push Images to Heroku
        run: |
          docker push registry.heroku.com/${{ secrets.APP_NAME }}/web
          docker push registry.heroku.com/${{ secrets.APP_NAME }}/nextjs

      # Release the Django app on Heroku
      - name: Release Django Web Process
        run: heroku container:release web -a ${{ secrets.APP_NAME }}

      # Release the Next.js app on Heroku
      - name: Release Next.js Worker Process
        run: heroku container:release nextjs -a ${{ secrets.APP_NAME }}

      # Optional: Check logs after release
      - name: Check Logs
        run: heroku logs --tail -a ${{ secrets.APP_NAME }}
